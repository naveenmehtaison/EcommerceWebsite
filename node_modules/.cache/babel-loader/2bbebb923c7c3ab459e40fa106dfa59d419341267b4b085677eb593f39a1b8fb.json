{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RYZEN\\\\OneDrive\\\\Desktop\\\\Ecommerce-website\\\\01-starting-project\\\\src\\\\Store\\\\StoreContext.js\",\n  _s = $RefreshSig$();\nimport DataContext from \"./auth-context\";\nimport React, { useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreContext = props => {\n  _s();\n  const [arr, setarr] = useState([]);\n  const [login, setlogin] = useState(false);\n  // const Ctx = DataContext.createContext()\n  const additemFunc = (props, item) => {\n    let found = false;\n    const new_map = arr.map((ele, item) => {\n      if (props.imageUrl === ele.imageUrl) {\n        found = true;\n        const newarr = [...arr];\n        newarr[item].quantity++;\n        setarr(newarr);\n      }\n    });\n    // if(found===false){\n    //     setarr(props)\n\n    // }\n  };\n  const j = [0, 1, 2, 3];\n  const removeItemFunc = (ele1, item1) => {\n    console.log(arr, 'old');\n    const newarr = arr.filter((ele, item) => ele1 !== ele);\n    setarr(newarr);\n    console.log(arr, item1);\n  };\n  const setarrfunc = Arr => {\n    setarr(Arr);\n  };\n  const loginfunc = () => {\n    setlogin(true);\n  };\n  const [email, setemail] = useState('');\n  const emailfunc = props => {\n    setemail(props);\n  };\n  const StoreContext2 = {\n    additem: additemFunc,\n    removeitem: removeItemFunc,\n    arr: arr,\n    setarr: setarrfunc,\n    login: loginfunc,\n    islog: login,\n    email: emailfunc,\n    curemail: email\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: StoreContext2,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreContext, \"usymL0nrcJfJPMw+xf4Jox65mZM=\");\n_c = StoreContext;\nexport default StoreContext;\nvar _c;\n$RefreshReg$(_c, \"StoreContext\");","map":{"version":3,"names":["DataContext","React","useState","useContext","jsxDEV","_jsxDEV","StoreContext","props","_s","arr","setarr","login","setlogin","additemFunc","item","found","new_map","map","ele","imageUrl","newarr","quantity","j","removeItemFunc","ele1","item1","console","log","filter","setarrfunc","Arr","loginfunc","email","setemail","emailfunc","StoreContext2","additem","removeitem","islog","curemail","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RYZEN/OneDrive/Desktop/Ecommerce-website/01-starting-project/src/Store/StoreContext.js"],"sourcesContent":["import DataContext from \"./auth-context\";\r\nimport React, { useState, useContext} from \"react\";\r\nconst StoreContext=(props)=>{\r\n    const [arr,setarr]= useState([])\r\n    const [login,setlogin] = useState(false)\r\n    // const Ctx = DataContext.createContext()\r\n    const additemFunc = (props, item) => {\r\n        let found= false\r\n        const new_map = arr.map((ele,item)=>{\r\n            \r\n            if(props.imageUrl===ele.imageUrl){\r\n                found=true\r\n                const newarr= [...arr]\r\n                newarr[item].quantity++\r\n                setarr(newarr)\r\n            }\r\n        })\r\n        // if(found===false){\r\n        //     setarr(props)\r\n\r\n        // }\r\n\r\n    }\r\n    \r\n    const j =[0,1,2,3]\r\n    const removeItemFunc=(ele1,item1)=>{\r\n        console.log(arr,'old')\r\n        const newarr = arr.filter((ele,item)=>(\r\n            ele1!==ele\r\n        ))\r\n        setarr(newarr)\r\n        console.log(arr,item1)\r\n\r\n    }\r\n    const setarrfunc=(Arr)=>{\r\n        setarr(Arr)\r\n    }\r\n    const loginfunc=()=>{\r\n        setlogin(true)\r\n    }\r\n    const [email ,setemail] = useState('')\r\n    const emailfunc=(props)=>{\r\n        setemail(props)\r\n    }\r\n    const StoreContext2 = {\r\n        additem:additemFunc,\r\n        removeitem:removeItemFunc,\r\n        arr:arr,\r\n        setarr:setarrfunc,\r\n        login:loginfunc,\r\n        islog:login,\r\n        email:emailfunc,\r\n        curemail:email\r\n    }\r\n    return(\r\n        <DataContext.Provider value={StoreContext2}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    )\r\n\r\n\r\n}\r\nexport default StoreContext"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,YAAY,GAAEC,KAAK,IAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACxC;EACA,MAAMW,WAAW,GAAGA,CAACN,KAAK,EAAEO,IAAI,KAAK;IACjC,IAAIC,KAAK,GAAE,KAAK;IAChB,MAAMC,OAAO,GAAGP,GAAG,CAACQ,GAAG,CAAC,CAACC,GAAG,EAACJ,IAAI,KAAG;MAEhC,IAAGP,KAAK,CAACY,QAAQ,KAAGD,GAAG,CAACC,QAAQ,EAAC;QAC7BJ,KAAK,GAAC,IAAI;QACV,MAAMK,MAAM,GAAE,CAAC,GAAGX,GAAG,CAAC;QACtBW,MAAM,CAACN,IAAI,CAAC,CAACO,QAAQ,EAAE;QACvBX,MAAM,CAACU,MAAM,CAAC;MAClB;IACJ,CAAC,CAAC;IACF;IACA;;IAEA;EAEJ,CAAC;EAED,MAAME,CAAC,GAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAClB,MAAMC,cAAc,GAACA,CAACC,IAAI,EAACC,KAAK,KAAG;IAC/BC,OAAO,CAACC,GAAG,CAAClB,GAAG,EAAC,KAAK,CAAC;IACtB,MAAMW,MAAM,GAAGX,GAAG,CAACmB,MAAM,CAAC,CAACV,GAAG,EAACJ,IAAI,KAC/BU,IAAI,KAAGN,GACV,CAAC;IACFR,MAAM,CAACU,MAAM,CAAC;IACdM,OAAO,CAACC,GAAG,CAAClB,GAAG,EAACgB,KAAK,CAAC;EAE1B,CAAC;EACD,MAAMI,UAAU,GAAEC,GAAG,IAAG;IACpBpB,MAAM,CAACoB,GAAG,CAAC;EACf,CAAC;EACD,MAAMC,SAAS,GAACA,CAAA,KAAI;IAChBnB,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMgC,SAAS,GAAE3B,KAAK,IAAG;IACrB0B,QAAQ,CAAC1B,KAAK,CAAC;EACnB,CAAC;EACD,MAAM4B,aAAa,GAAG;IAClBC,OAAO,EAACvB,WAAW;IACnBwB,UAAU,EAACd,cAAc;IACzBd,GAAG,EAACA,GAAG;IACPC,MAAM,EAACmB,UAAU;IACjBlB,KAAK,EAACoB,SAAS;IACfO,KAAK,EAAC3B,KAAK;IACXqB,KAAK,EAACE,SAAS;IACfK,QAAQ,EAACP;EACb,CAAC;EACD,oBACI3B,OAAA,CAACL,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAEN,aAAc;IAAAO,QAAA,EACtCnC,KAAK,CAACmC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAI/B,CAAC;AAAAtC,EAAA,CA3DKF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AA4DlB,eAAeA,YAAY;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}